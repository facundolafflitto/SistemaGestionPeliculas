// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using SistemaGestionPeliculas_Data;

#nullable disable

namespace SistemaGestionPeliculas_Data.Migrations
{
    [DbContext(typeof(PeliculasContext))]
    [Migration("20250731211030_AddFavoritasSeries")]
    partial class AddFavoritasSeries
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.27")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("PeliculaUsuario", b =>
                {
                    b.Property<int>("FavoritasId")
                        .HasColumnType("integer");

                    b.Property<int>("UsuariosFavoritosId")
                        .HasColumnType("integer");

                    b.HasKey("FavoritasId", "UsuariosFavoritosId");

                    b.HasIndex("UsuariosFavoritosId");

                    b.ToTable("PeliculaUsuario");
                });

            modelBuilder.Entity("SerieUsuario", b =>
                {
                    b.Property<int>("SeriesFavoritasId")
                        .HasColumnType("integer");

                    b.Property<int>("UsuariosFavoritosId")
                        .HasColumnType("integer");

                    b.HasKey("SeriesFavoritasId", "UsuariosFavoritosId");

                    b.HasIndex("UsuariosFavoritosId");

                    b.ToTable("SerieUsuario");
                });

            modelBuilder.Entity("SistemaGestionPeliculas.TransferObject.Models.Pelicula", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Año")
                        .HasColumnType("integer");

                    b.Property<string>("Genero")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ImagenUrl")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Peliculas");
                });

            modelBuilder.Entity("SistemaGestionPeliculas.TransferObject.Models.Serie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Año")
                        .HasColumnType("integer");

                    b.Property<string>("Genero")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ImagenUrl")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Series");
                });

            modelBuilder.Entity("SistemaGestionPeliculas.TransferObject.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Rol")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("PeliculaUsuario", b =>
                {
                    b.HasOne("SistemaGestionPeliculas.TransferObject.Models.Pelicula", null)
                        .WithMany()
                        .HasForeignKey("FavoritasId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SistemaGestionPeliculas.TransferObject.Models.Usuario", null)
                        .WithMany()
                        .HasForeignKey("UsuariosFavoritosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SerieUsuario", b =>
                {
                    b.HasOne("SistemaGestionPeliculas.TransferObject.Models.Serie", null)
                        .WithMany()
                        .HasForeignKey("SeriesFavoritasId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SistemaGestionPeliculas.TransferObject.Models.Usuario", null)
                        .WithMany()
                        .HasForeignKey("UsuariosFavoritosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
